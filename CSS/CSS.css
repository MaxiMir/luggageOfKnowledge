/* ### Переменные на чистом CSS ### */
:root { /* :root - класс для глобальных переменных */
    --color: red
}

.elements {
    --width: 100px; /* локальная переменная - для дочерних элементов .elements */
    color: var(--color, blue); /* blue - цвет по умолч. */
}

.elements__item{
    width: var(--width);
}

/*
--- В JS --
const rootCss = document.querySelector(':root'); 
const CssRules = getComputedStyle(element);
const color = rootCss.getPropertyValue('--color'); // получение свойства

rootCss.style.setProperty('--color', 'green'); // изменение свойства
*/


/* ### Bounce Element Around Viewport in CSS (https://css-tricks.com/bounce-element-around-viewport-in-css/) ### */

/* HTML:
<div class="x">
  <img class="y" src="https://blog.codepen.io/wp-content/uploads/2012/06/Button-Black-Large.png" alt="codepen" />
</div>
*/

/* SCSS: */
$size: 100px;

body {
    margin: 0;
}

img, div {
    width: $size;
    height: $size;
}

.x {
    animation: x 13s linear infinite alternate;
}

.y {
    animation: y 7s linear infinite alternate;
}

@keyframes x {
    100% {
        transform: translateX( calc(100vw - #{$size}) );
    }
}

@keyframes y {
    100% {
        transform: translateY( calc(100vh - #{$size}) );
    }
}



/* #@ Примеры использования root свойств + модалка с центрированием по центру #@ */
/**
HTML:

<div class="fade"></div>

<div class="modal modal-center">
  Hello, world!
</div>

<main>
  <p>Главной отличительной чертой абсолютного позиционирования является то, что блок как бы "выдёргивается" из потока документа. Для него больше не существует такого элемента, поэтому место, которое он занимал ранее, освобождается и его могут занять другие элементы (если конечно их ширина и высота позволяют это сделать).</p>
</main>
 */

:root {
    --modal-height: 100px;
    --modal-width: 100px;
}

body {
    margin: 0;
    padding: 0;
}

.fade {
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;

    position: absolute;
    background: rgba(0, 0, 0, 0.7);
}

.modal {
    height: var(--modal-height);
    width: var(--modal-width);
    padding: 20px;

    position: absolute;
    background: #FFFFFF;

    box-sizing: border-box;

    font-weight: bold;
}

.modal-center {
    left: calc(50% - var(--modal-width) / 2);
    top: calc(50% - (var(--modal-height) / 2));
}
